<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>pujic</title><link>http://example.org/</link><description>pujic</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>pujichun@outlook.com (普吉春)</managingEditor><webMaster>pujichun@outlook.com (普吉春)</webMaster><lastBuildDate>Thu, 24 Aug 2023 22:05:27 +0800</lastBuildDate><atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml"/><item><title>Rust Send 和 Sync</title><link>http://example.org/posts/rust_send_sync/</link><pubDate>Thu, 24 Aug 2023 22:05:27 +0800</pubDate><author>作者</author><guid>http://example.org/posts/rust_send_sync/</guid><description>Send 和 Sync 这两个 Trait 在跨线程的时候需要关注 Send: A type is Send if it is safe to send it to another thread. Sync: A type is Sync if it is safe to share between threads (T is Sync if and only if &amp;amp;T is Send) Send 和 Sync 是 Rust 并发机制的基础。因</description></item><item><title>Cargo镜像仓库设置</title><link>http://example.org/posts/cargo_mirrors/</link><pubDate>Tue, 22 Aug 2023 23:14:04 +0800</pubDate><author>作者</author><guid>http://example.org/posts/cargo_mirrors/</guid><description>cargo 1.68 版本开始支持稀疏索引：不再需要完整克隆 crates.io-index 仓库，可以加快获取包的速度。如果 cargo 版本大于等于 1.68，可以直接使用而不需要开启 nightly。</description></item><item><title>Homebrew安装和换源</title><link>http://example.org/posts/homebrew_install/</link><pubDate>Mon, 21 Aug 2023 22:59:35 +0800</pubDate><author>作者</author><guid>http://example.org/posts/homebrew_install/</guid><description>安装 安装部分参考清华大学开源镜像站 如果有代理可以直接使用官方文档中的方式直接安装 替换源 同样参考清华大学开源镜像站的文档，但是需要注意，hom</description></item><item><title>poetry - python 的包管理工具</title><link>http://example.org/posts/poetry2/</link><pubDate>Mon, 14 Aug 2023 10:30:04 +0000</pubDate><author>作者</author><guid>http://example.org/posts/poetry2/</guid><description>以下功能中不管是静态检查插件、格式化工具配置、launch profile 等，基本都可以使用 pycharm 和 vscode 做到，但是都同时做到是不可能的，像 black 在 pycharm 中配置起来还是比</description></item><item><title>C#10与.Net6.0</title><link>http://example.org/posts/csharp10%E4%B8%8Edotnet6/</link><pubDate>Sun, 01 Jan 2023 17:09:28 +0800</pubDate><author>作者</author><guid>http://example.org/posts/csharp10%E4%B8%8Edotnet6/</guid><description>C# 代码是怎么运行的 dotnet的编译工具会将C#源代码转换成IL（Intermediate Language）代码，并将IL代码存储在DLL或</description></item><item><title>Rust 包装类型</title><link>http://example.org/posts/rust%E5%8C%85%E8%A3%85%E7%B1%BB%E5%9E%8B/</link><pubDate>Sat, 12 Nov 2022 20:35:08 +0000</pubDate><author>作者</author><guid>http://example.org/posts/rust%E5%8C%85%E8%A3%85%E7%B1%BB%E5%9E%8B/</guid><description>&lt;p>Rust 中有许多包装类型用于访问数据，每种都有独特性。&lt;/p></description></item><item><title>开源工具</title><link>http://example.org/posts/%E5%BC%80%E6%BA%90%E5%B7%A5%E5%85%B7/</link><pubDate>Sun, 04 Sep 2022 18:10:03 +0800</pubDate><author>作者</author><guid>http://example.org/posts/%E5%BC%80%E6%BA%90%E5%B7%A5%E5%85%B7/</guid><description>文章已迁移到 Notion https://nervous-petunia-ec3.notion.site/3fbc0343cb724c25a6e05d487f697ab2?v=1af10d27f4644002bb8f5fce2d75c47a&amp;pvs=4</description></item><item><title>YApi</title><link>http://example.org/posts/yapi/</link><pubDate>Sat, 13 Aug 2022 12:15:19 +0800</pubDate><author>作者</author><guid>http://example.org/posts/yapi/</guid><description>yapi是什么 YApi 是高效、易用、功能强大的 api 管理平台，旨在为开发、产品、测试人员提供更优雅的接口管理服务。可以帮助开发者轻松创建、发布、维护 A</description></item><item><title>Go语言是如何运行的</title><link>http://example.org/posts/how-go-works/</link><pubDate>Sun, 22 May 2022 13:02:44 +0800</pubDate><author>作者</author><guid>http://example.org/posts/how-go-works/</guid><description>&lt;p>Go 是编译型语言，不依赖虚拟机，编译成二进制的可执行程序即可运行&lt;/p></description></item><item><title>Docker slim-buster Image Change Apt Source</title><link>http://example.org/posts/slim-buster-image-change-apt-source/</link><pubDate>Fri, 13 May 2022 15:18:03 +0800</pubDate><author>作者</author><guid>http://example.org/posts/slim-buster-image-change-apt-source/</guid><description>&lt;p>在使用 Docker 构建镜像的时候拉取系统依赖或者更新镜系统很慢可以更换源解决&lt;/p></description></item></channel></rss>